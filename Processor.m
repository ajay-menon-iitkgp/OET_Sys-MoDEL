%% PreProcessor & PostProcessor for the Ocean Engineering Toolbox (OET)

% Note: Licensing information appended to this file.

% Building and executing models in the OET require the hydrodynamic
% coefficients for all bodies. These parameters can be obtained from a
% diffraction analysis tool such as WAMIT, Nemoh, Capytaine, or Aqwa. To
% convert the different output formats into a standard convention, the
% BEMIO Code from WEC-Sim must be run on MATLAB, and the results saved to
% a Hierarchical Data Format (HDF) file with the '.h5' extension.

% As of early 2024, Modelica does not have a file import protocol for HDF
% formats. Th PreProcessor script extracts the relevant data points from
% the HDF file and saves it to a MATLAB structure that can be imported by
% the OET.

% Once simulations are built and executed in the OET, validation is
% typically performed against WEC-Sim output. For this, the wave elevation
% profile generated by the OET must be supplied to WEC-Sim. Additionally,
% the meshed STL file of all bodies must be supplied for visualization.
% Note that the OET does not require a geometry file at present. Modelica
% can export the dynamic response, forces, and wave profile to a CSV file.

% The PostProcessor script then processes the wave profile into the WEC-Sim
% format. After running WEC-Sim, the script compares the dynamic response
% (heave displacement) and excitation force between both tools. Note that
% other parameters can also be plotted for comparison, but this code will
% need to be suitably modified.

% Clear workspace and command line
clear
clc

%% PreProcessor Script

% Export required hydrodynamic coefficients from a BEMIO HDF file to a
% MATLAB structure. This structure is then imported by the OET.

% As of v0.2, only the wave excitation force coefficient vectors must be
% exported. The remaining particulars are hard-coded for the RM3 toroidal
% float sample body. To modify this, additional hydrostatic and
% hydrodynamic parameters can be exported in a similar manner. Note that
% that this will require modification to the OET source code.

% The sample files use the below naming convention:
%
%   Hydro file:     'rm3.h5'
%   Structure:      'PlateBEM.mat'
%
% The hydro file name must match the output file from BEMIO, while the
% structure name must match the import statements in Modelica.

% The h5read() function reads a HDF file. Matrices must be converted into a
% row vector prior to exporting. The real and imaginary components of the
% wave excitation force coefficients are stored as matrices and require
% conversion. However, the frequency values at which these coefficients are
% measured is also a vector, and does not need further conversion.

PlateBEM.FexcRe2 = h5read(['D:\Mitacs Globalink 2022\Sys-MoDEL\' ...
    'Modelica Codes\rm3.h5'],'/body1/hydro_coeffs/excitation/re');  % Real component of wave excitation force coefficient
PlateBEM.FexcRe(1,:) = PlateBEM.FexcRe2(:,:,3);
PlateBEM.FexcIm2 = h5read(['D:\Mitacs Globalink 2022\Sys-MoDEL\' ...
    'Modelica Codes\rm3.h5'],'/body1/hydro_coeffs/excitation/im');  % Imaginary component of wave excitation force coefficient
PlateBEM.FexcIm(1,:) = PlateBEM.FexcIm2(:,:,3);
PlateBEM.w = h5read(['D:\Mitacs Globalink 2022\Sys-MoDEL\' ...
    'Modelica Codes\rm3.h5'],'/simulation_parameters/w');           % Frequency values

% Export the MATLAB structure.
save('PlateBEM.mat')

%% Next steps

% After running this section, build the simulation in the OET using
% the MATLAB structure by specifying the file location in the import
% statements. After simulation, export the time, wave excitation force,
% wave elevation profile, and heave displacement to a CSV file. The order
% of columns (1-4) must be in this order, otherwise the PostProcessor
% statements below must be modified.

% After export, run the PostProcessor script below section-by-section.

%% PostProcessor Script - 1

% Import wave elevation profile into WEC-Sim
M = readmatrix('exportedVariables2.csv');
elevationData(:,1) = M(:,1);                    % Time variable
elevationData(:,2) = M(:,3);                    % Wave elevation (in m)

% Remove duplicate time records from Modelica output file
[~,uidx] = unique(elevationData(:,1),'stable');
elevationData = elevationData(uidx,:);

% Save the elevation variable to a MATLAB structure.
save('elevationData.mat','elevationData')

%% PostProcessor Script - 2

% Run WEC-Sim with the elevation profile to obtain validation dataset. The
% following aspects must be kept in mind when preparing the WEC-Sim input:
%
%   1. The wecSimInputFile wave class must be modified to import data. A
%   sample code snippet to perform this is:
%
%                   |10|   %% Wave Information
%                   |11|   waves = waveClass('elevationImport');
%                   |12|   waves.elevationFile = 'elevationData.mat';
%
%   2. Use the same BEMIO HDF file supplied to the OET when setting up the
%   '\hydroData' directory for WEC-Sim.

%% Cont'd (PostProcessor Script - 2)

% Navigate to the local directory with the WEC-Sim simulation files.
% Only run this section once the wecSimInputFile.m file, '\hydroData'
% directory, '\geometry' directory, and Simulink model have been prepared.

wecSim

%% PostProcessor Script - 3

% Plot WEC-Sim and Modelica results
wecTime = output.bodies.time(:);
wecFexc = output.bodies.forceExcitation(:,3);
wecZ = output.bodies.position(:,3);
[~,uidx] = unique(M(:,1),'stable');
M = M(uidx,:);

% Top plot
figure(1)
plot(wecTime,wecFexc,'-b','DisplayName','WEC-Sim');
hold on
plot(M(:,1),M(:,2),'--xr','DisplayName','Modelica OET','MarkerIndices',1:15:length(M(:,2)))
hold off
title('Excitation Force Comparison')

% Bottom plot
figure(2)
plot(wecTime,wecZ+0.72,'-b','DisplayName','WEC-Sim');
hold on
plot(M(:,1),M(:,4),'--xr','DisplayName','Modelica OET','MarkerIndices',1:15:length(M(:,4)))
hold off
title('Heave Displacement Comparison')

% Plot absolute error
plot(wecTime,abs(wecFexc - interp1(M(:,1),M(:,2),wecTime)))

%% Licensing information

%   Modelica Ocean Engineering Toolbox v0.2
%   Copyright (C) 2024  Ajay Menon, Ali Haider, Kush Bubbar
% 
%   This program is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
% 
%   This program is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
% 
%   Your copy of the GNU General Public License can be viewed
%   here <https://www.gnu.org/licenses/>.
